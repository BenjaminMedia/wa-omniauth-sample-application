
Rails 4.1 example application that demonstrate the usage of bonnier-omniauth and bonnier-api gems

h2. What Is Implemented -- and What Is Not

The example application can be used as the basis for a website that provides a login using White Album account. Features include:

* Home page
* Navigation bar
* Login
* Logout
* Show user profile
* List of users

The list of users is visible to anyone. Use authentication to restrict it to the user who was created first, or implement authorization to restrict it to an administrator. See the "rails-devise-pundit":https://github.com/RailsApps/rails-devise-pundit example application if you wish to add authorization.

h3. Configuration File
Steps are for the purpose of testing:

# Run white_album project (authorizaion server)
# modify omniauth-bonnier gem path in Gemfile to point to the gem path on filesystem
# modify :site option in omniauth-bonnier/gem/path/lib/omniauth/strategies/bonnier_oauth2.rb to point to white_album server url.
# Create a new application from white_album applications page by navigating to http://white_album_url/api/oauth/applications
# copycopy application key and secret to this applications config/secrets.yml file

Add your credentials to the file *config/secrets.yml*:

<pre>
development:
  omniauth_provider_key: <%= ENV["OMNIAUTH_PROVIDER_KEY"] %>
  omniauth_provider_secret: <%= ENV["OMNIAUTH_PROVIDER_SECRET"] %>
  secret_key_base: very_long_random_string

test:
  secret_key_base: very_long_random_string

# Do not keep production secrets in the repository,
# instead read values from the environment.
production:
  omniauth_provider_key: <%= ENV["OMNIAUTH_PROVIDER_KEY"] %>
  omniauth_provider_secret: <%= ENV["OMNIAUTH_PROVIDER_SECRET"] %>
  secret_key_base: <%= ENV["SECRET_KEY_BASE"] %>
</pre>

